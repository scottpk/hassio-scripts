set_the_thermostat_based_on_real_feel:
  alias: Set the thermostat based on feel
  description: Set the thermostat based on perceived temperature, derived using humidity and the simplified Heat Index equation (https://www.wpc.ncep.noaa.gov/html/heatindex_equation.shtml)
  fields:
    trg_thermostat:
      name: Thermostat
      description: Thermostat or climate device to control
      required: true
      selector:
        entity:
          domain: climate
    t_perceived:
      name: Perceived Temperature (F)
      description: Perceived temperature
      default: 78
      required: false
      selector:
        number:
          min: 40
          max: 100
          step: 1
          unit_of_measurement: °F
    t_perceived_high:
      name: Perceived Temperature (F) high
      description: Perceived temperature
      default: 78
      required: false
      selector:
        number:
          min: 40
          max: 100
          step: 1
          unit_of_measurement: °F
    t_perceived_low:
      name: Perceived Temperature (F) low
      description: Perceived temperature
      default: 78
      required: false
      selector:
        number:
          min: 40
          max: 100
          step: 1
          unit_of_measurement: °F
    humidity_target:
      name: Humidity source
      description: Humidity sensor
      required: true
      selector:
        entity:
          device_class: humidity
    temp_sensor:
      name: Temp sensor
      description: Temperature sensor
      required: false
      selector:
        entity:
          device_class: temperature
  variables:
    incoming_tmp: '{{ ((state_attr(trg_thermostat, "current_temperature") | float)) }}'
    temp_in: '{{states(temp_sensor) | float}}'
    temp_val: '{{(temp_in) }}'
    sensorct: '{{state_attr(temp_sensor,"count_sensors") | float}}'
    mean_tmp: '{{((temp_val * sensorct) + incoming_tmp) / (sensorct + 1.0)}}'
    humidity_val: '{{(states(humidity_target) | float)}}'
    #bias: '{{(incoming_tmp - mean_tmp)}}'
    bias: '{{((((2.0 * incoming_tmp) - (0.094*humidity_val) + 20.6)/2.2)) - ((((2.0 * mean_tmp) - (0.094*humidity_val) + 20.6)/2.2))}}'
    high_tmp: '{{((((2.0 * (t_perceived_high | float)) - (0.094*humidity_val) + 20.6)/2.2)) + bias}}'
    low_tmp: '{{((((2.0 * (t_perceived_low| float)) - (0.094*humidity_val) + 20.6)/2.2)) + bias}}'
  sequence:
  - service: climate.set_temperature
    data:
      target_temp_high: '{{high_tmp | round(0)}}'
      target_temp_low: '{{low_tmp | round(0)}}'
    target:
      entity_id: '{{ trg_thermostat }}'
  mode: single
  icon: mdi:thermometer